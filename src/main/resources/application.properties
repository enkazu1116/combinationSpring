spring.application.name=combinationSpring

# Turso (SQLite) Database Configuration
spring.datasource.url=jdbc:sqlite:${TURSO_DATABASE_URL:./data/app.db}
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Spring Modulith Events - Kafka Outbox Pattern
spring.modulith.events.externalization.enabled=true
spring.modulith.events.kafka.enabled=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=combinationSpring-consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000

# Redisson Configuration for Distributed Locking
spring.redisson.config=classpath:redisson.yaml

# Server Configuration
server.port=8080